//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class sFrame_sGameFlowWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(sFramework.sGameFlow), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("startGame", startGame);
		L.RegFunction("changeNextState", changeNextState);
		L.RegFunction("logicUpdate", logicUpdate);
		L.RegFunction("onNeedUpdateState", onNeedUpdateState);
		L.RegFunction("onUpdateState", onUpdateState);
		L.RegFunction("onUpdateFinish", onUpdateFinish);
		L.RegFunction("onLoadAllFinish", onLoadAllFinish);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("instance", get_instance, set_instance);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int startGame(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			sFramework.sGameFlow obj = (sFramework.sGameFlow)ToLua.CheckObject(L, 1, typeof(sFramework.sGameFlow));
			obj.startGame();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int changeNextState(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			sFramework.sGameFlow obj = (sFramework.sGameFlow)ToLua.CheckObject(L, 1, typeof(sFramework.sGameFlow));
			obj.changeNextState();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int logicUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			sFramework.sGameFlow obj = (sFramework.sGameFlow)ToLua.CheckObject(L, 1, typeof(sFramework.sGameFlow));
			obj.logicUpdate();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int onNeedUpdateState(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			sFramework.sGameFlow obj = (sFramework.sGameFlow)ToLua.CheckObject(L, 1, typeof(sFramework.sGameFlow));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.onNeedUpdateState(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int onUpdateState(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			sFramework.sGameFlow obj = (sFramework.sGameFlow)ToLua.CheckObject(L, 1, typeof(sFramework.sGameFlow));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			obj.onUpdateState(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int onUpdateFinish(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			sFramework.sGameFlow obj = (sFramework.sGameFlow)ToLua.CheckObject(L, 1, typeof(sFramework.sGameFlow));
			obj.onUpdateFinish();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int onLoadAllFinish(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			sFramework.sGameFlow obj = (sFramework.sGameFlow)ToLua.CheckObject(L, 1, typeof(sFramework.sGameFlow));
			obj.onLoadAllFinish();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_instance(IntPtr L)
	{
		try
		{
			ToLua.Push(L, sFramework.sGameFlow.instance);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_instance(IntPtr L)
	{
		try
		{
			sFramework.sGameFlow arg0 = (sFramework.sGameFlow)ToLua.CheckUnityObject(L, 2, typeof(sFramework.sGameFlow));
			sFramework.sGameFlow.instance = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

