//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class sFrame_sULoadingWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(sFramework.sULoading), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("hideLoading", hideLoading);
		L.RegFunction("showLoading", showLoading);
		L.RegFunction("enableCamera", enableCamera);
		L.RegFunction("disableCamera", disableCamera);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("instance", get_instance, set_instance);
		L.RegVar("loading", get_loading, set_loading);
		L.RegVar("maincamera", get_maincamera, set_maincamera);
		L.RegVar("playerCC", get_playerCC, set_playerCC);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int hideLoading(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			sFramework.sULoading obj = (sFramework.sULoading)ToLua.CheckObject(L, 1, typeof(sFramework.sULoading));
			obj.hideLoading();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int showLoading(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			sFramework.sULoading obj = (sFramework.sULoading)ToLua.CheckObject(L, 1, typeof(sFramework.sULoading));
			obj.showLoading();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int enableCamera(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			sFramework.sULoading obj = (sFramework.sULoading)ToLua.CheckObject(L, 1, typeof(sFramework.sULoading));
			obj.enableCamera();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int disableCamera(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			sFramework.sULoading obj = (sFramework.sULoading)ToLua.CheckObject(L, 1, typeof(sFramework.sULoading));
			obj.disableCamera();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_instance(IntPtr L)
	{
		try
		{
			ToLua.Push(L, sFramework.sULoading.instance);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_loading(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			sFramework.sULoading obj = (sFramework.sULoading)o;
			UnityEngine.GameObject ret = obj.loading;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index loading on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_maincamera(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			sFramework.sULoading obj = (sFramework.sULoading)o;
			UnityEngine.GameObject ret = obj.maincamera;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index maincamera on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_playerCC(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			sFramework.sULoading obj = (sFramework.sULoading)o;
			UnityEngine.GameObject ret = obj.playerCC;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index playerCC on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_instance(IntPtr L)
	{
		try
		{
			sFramework.sULoading arg0 = (sFramework.sULoading)ToLua.CheckUnityObject(L, 2, typeof(sFramework.sULoading));
			sFramework.sULoading.instance = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_loading(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			sFramework.sULoading obj = (sFramework.sULoading)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			obj.loading = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index loading on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_maincamera(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			sFramework.sULoading obj = (sFramework.sULoading)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			obj.maincamera = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index maincamera on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_playerCC(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			sFramework.sULoading obj = (sFramework.sULoading)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			obj.playerCC = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index playerCC on a nil value" : e.Message);
		}
	}
}

